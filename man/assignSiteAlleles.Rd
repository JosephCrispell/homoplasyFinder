% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/homoplasyFinder.R
\name{assignSiteAlleles}
\alias{assignSiteAlleles}
\title{Run HomoplasyFinder using Java code}
\usage{
assignSiteAlleles(results, fastaFile)
}
\arguments{
\item{results}{A data.frame object produced by reading in the \code{homoplasyFinder} output file produced by \code{runHomoplasyFinderInJava} or \code{runHomoplasyFinderJarTool}}

\item{fastaFile}{The full path to a FASTA formatted nucleotide sequence alignment. Defaults to "Not provided"}
}
\value{
A list containing information about each site reported in the \code{results} table
}
\description{
This function runs HomoplasyFinder (coded in Java) to identify positions that are potentially homoplasious
}
\examples{
# Find the FASTA and tree files attached to package
fastaFile <- system.file("extdata", "example.fasta", package = "homoplasyFinder")
treeFile <- system.file("extdata", "example.tree", package = "homoplasyFinder")

# Get the current working directory
workingDirectory <- paste0(getwd(), "/")

# Run the HomoplasyFinder java code
inconsistentPositions <- runHomoplasyFinderInJava(treeFile, fastaFile, path=workingDirectory)

# Get the current date
date <- format(Sys.Date(), "\%d-\%m-\%y")
 
# Read in the output table
resultsFile <- paste0(workingDirectory, "consistencyIndexReport_", date, ".txt")
results <- read.table(resultsFile, header=TRUE, sep="\t", stringsAsFactors=FALSE)

# Get the site information
siteInfo <- assignSiteAlleles(results, fastaFile)

# Get the information for the first site
siteInfo[[1]]
}
\keyword{homoplasyFinder}
\keyword{results}
\keyword{sites}
